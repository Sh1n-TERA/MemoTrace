<div class="memo-form-container">
  <%= form_with(model: @memo, local: true, id: "new_memo_form") do |form| %>
    <div class="mode-tabs">
      <button type="button" class="tab-button active" data-mode="normal">通常メモ</button>
      <button type="button" class="tab-button" data-mode="error">エラー記録</button>
    </div>

    <div class="form-card">
      <!-- 修正箇所: title フィールドをここに移動します -->
      <div class="field">
        <%= form.label :title, 'タイトル' %>
        <%= form.text_field :title, placeholder: "タイトルを入力..." %>
      </div>

      <div id="normal-mode-fields">
        <!-- 元々ここに title フィールドがありました -->
        <div class="field">
          <%= form.label :content, '内容' %>
          <%= form.text_area :content, placeholder: "内容を入力..." %>
        </div>
      </div>

      <div id="error-mode-fields" style="display:none;">
        <!-- 元々ここに title フィールドがありました -->
        <div class="field">
          <%= form.label :error_content, 'エラー内容' %>
          <%= form.text_area :error_content, placeholder: "エラー内容を入力..." %>
        </div>

        <div class="field">
          <%= form.label :cause, '原因' %>
          <%= form.text_area :cause, placeholder: "原因を入力..." %>
        </div>

        <div class="field">
          <%= form.label :solution, '解決策' %>
          <%= form.text_area :solution, placeholder: "解決策を入力..." %>
        </div>
      </div>

      <div class="field">
        <%= form.label :tag, 'タグ' %>
        <%= form.text_field :tag, placeholder: "タグを入力 (例: #HTML #)" %>
      </div>

      <div class="field">
        <%= form.label :image, '画像添付' %>
        <div class="image-upload-area">
          <%= form.file_field :image, class: "image-input" %>
          <p id="upload-text">画像を添付</p>
          <img id="image-preview" src="#" alt="画像プレビュー" style="max-width: 100%; display: none;">
        </div>
      </div>
      
      <%= form.hidden_field :mode, value: 'normal', id: 'memo-mode' %>

      <div class="actions">
        <%= form.submit "保存" %>
      </div>
    </div>
  <% end %>
</div>


<script>
  document.addEventListener('turbo:load', () => {
    const tabButtons = document.querySelectorAll('.tab-button');
    const normalFields = document.getElementById('normal-mode-fields');
    const errorFields = document.getElementById('error-mode-fields');
    const memoModeInput = document.getElementById('memo-mode');
    const imageInput = document.querySelector('.image-input');
    const imagePreview = document.getElementById('image-preview');
    const uploadText = document.getElementById('upload-text');

    tabButtons.forEach(button => {
      button.addEventListener('click', (event) => {
        tabButtons.forEach(btn => btn.classList.remove('active'));
        event.target.classList.add('active');

        const selectedMode = event.target.dataset.mode;
        memoModeInput.value = selectedMode;

        if (selectedMode === 'normal') {
          normalFields.style.display = 'block';
          errorFields.style.display = 'none';
        } else if (selectedMode === 'error') {
          normalFields.style.display = 'none';
          errorFields.style.display = 'block';
        }
      });
    });

    imageInput.addEventListener('change', (event) => {
      const file = event.target.files[0];
      if (file) {
        const reader = new FileReader();
        reader.onload = (e) => {
          imagePreview.src = e.target.result;
          imagePreview.style.display = 'block';
          uploadText.style.display = 'none';
        };
        reader.readAsDataURL(file);
      } else {
        imagePreview.src = '';
        imagePreview.style.display = 'none';
        uploadText.style.display = 'block';
      }
    });
  });
</script>